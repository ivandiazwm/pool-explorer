{"version":3,"sources":["components/Topbar.tsx","components/PoolSearcher.tsx","components/Agents.tsx","App.tsx","slices/appSlice.ts","app/store.ts","index.tsx"],"names":["Topbar","className","Button","as","labelPosition","color","Icon","name","Label","basic","pointing","PoolSearcher","useState","loading","value","setValue","results","Search","placeholder","size","onResultSelect","onSearchChange","e","Agent","Table","Row","Cell","target","href","Agents","Header","striped","HeaderCell","Body","App","appSlice","createSlice","initialState","network","contractAddress","baseAPI","baseExplorerAPI","pool","id","agents","version","fromAddress","date","reducers","store","configureStore","reducer","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAuBeA,MAnBf,WACE,OACE,yBAAQC,UAAU,SAAlB,UACE,qBAAKA,UAAU,gBAAf,2BACA,qBAAKA,UAAU,2BAAf,SACA,eAACC,EAAA,EAAD,CAAQC,GAAG,MAAMC,cAAc,QAA/B,UACE,eAACF,EAAA,EAAD,CAAQG,MAAM,MAAd,UACE,cAACC,EAAA,EAAD,CAAMC,KAAK,SADb,gBAIA,cAACC,EAAA,EAAD,CAAOL,GAAG,IAAIM,OAAK,EAACJ,MAAM,MAAMK,SAAS,OAAzC,oC,wBCaOC,MAvBf,WAAyB,IAAD,EACQC,oBAAS,GADjB,mBACfC,EADe,aAEID,mBAAS,KAFb,mBAEfE,EAFe,KAERC,EAFQ,OAGQH,mBAAS,IAHjB,mBAGfI,EAHe,KAKtB,OALsB,KAMpB,qBAAKf,UAAU,eAAf,SACE,cAACgB,EAAA,EAAD,CACEhB,UAAU,sBACViB,YAAY,mBACZC,KAAK,OACLN,QAASA,EACTO,eAAgB,aAChBC,eAAgB,SAACC,EAAD,GAAiB,IAAZR,EAAW,EAAXA,MACnBC,EAASD,IAEXE,QAASA,EACTF,MAAOA,O,yBCjBf,SAASS,IACP,OACE,eAACC,EAAA,EAAMC,IAAP,CAAWxB,UAAU,QAArB,UACE,eAACuB,EAAA,EAAME,KAAP,CAAYzB,UAAU,cAAtB,mBACQ,qCACN,mBACE0B,OAAO,SACPC,KAAK,6EAFP,qFAMF,cAACJ,EAAA,EAAME,KAAP,UAAY,cAAClB,EAAA,EAAD,CAAOH,MAAM,SAAb,qBACZ,cAACmB,EAAA,EAAME,KAAP,UACE,mBACEC,OAAO,SACPC,KAAK,iFAFP,0DAMF,cAACJ,EAAA,EAAME,KAAP,kCAiCSG,MA5Bf,WACE,OACE,sBAAK5B,UAAU,oBAAf,UACE,eAAC6B,EAAA,EAAD,CAAQ3B,GAAG,KAAX,uBAEE,sBAAMF,UAAU,iBAAhB,kGAIF,eAACuB,EAAA,EAAD,CAAOO,SAAO,EAAd,UACE,eAACP,EAAA,EAAMM,OAAP,WACE,cAACN,EAAA,EAAMQ,WAAP,sBACA,cAACR,EAAA,EAAMQ,WAAP,sBACA,cAACR,EAAA,EAAMQ,WAAP,mBACA,cAACR,EAAA,EAAMQ,WAAP,sBAEF,eAACR,EAAA,EAAMS,KAAP,WACE,cAACV,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,UAGJ,cAACrB,EAAA,EAAD,4B,OCnCSgC,MAVf,WACE,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCyCSkC,EANSC,YAAY,CAClC7B,KAAM,MACN8B,aAxB6B,CAC7BC,QAAS,CACP/B,KAAM,cACNgC,gBAAiB,6CACjBC,QAAS,yCACTC,gBAAiB,+BAEnBC,KAAM,CACJC,GAAI,qEACJpC,KAAM,gBAERqC,OAAQ,CACN,CACED,GAAI,qEACJpC,KAAM,SACNsC,QAAS,QACTC,YAAa,6CACbC,KAAM,sBAQVC,SAAU,KAGZ,QCjDaC,EAAQC,YAAe,CAClCC,QAAS,CACPC,IAAKjB,K,SCGTkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.33da5428.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Icon, Label } from 'semantic-ui-react';\nimport './Topbar.css';\n\nfunction Topbar() {\n  return (\n    <header className=\"Topbar\">\n      <div className=\"Topbar__title\">Pool explorer</div>\n      <div className=\"Topbar__button-container\">\n      <Button as='div' labelPosition='right'>\n        <Button color='red'>\n          <Icon name='fork' />\n          Production\n        </Button>\n        <Label as='a' basic color='red' pointing='left'>\n          0xBD7F...969B\n        </Label>\n      </Button>\n      </div>\n    </header>\n  )\n}\n\nexport default Topbar;","import React, { useState } from 'react';\nimport { Button, Icon, Label, Search } from 'semantic-ui-react';\nimport './PoolSearcher.css';\n\nfunction PoolSearcher() {\n  const [loading, setLoading] = useState(false);\n  const [value, setValue] = useState('');\n  const [results, setResults] = useState([]);\n\n  return (\n    <div className=\"PoolSearcher\">\n      <Search\n        className=\"PoolSearcher__input\"\n        placeholder=\"Enter pool id...\"\n        size=\"huge\"\n        loading={loading}\n        onResultSelect={() => {}}\n        onSearchChange={(e, {value}) => {\n          setValue(value)\n        }}\n        results={results}\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default PoolSearcher;","import React from 'react';\nimport { Button, Label, Header, Table } from 'semantic-ui-react';\nimport './Agents.css';\n\nfunction Agent() {\n  return (\n    <Table.Row className=\"Agent\">\n      <Table.Cell className=\"Agent__name\">\n        agent1<span> </span>\n        <a\n          target=\"_blank\"\n          href=\"https://ipfs.infura.io/ipfs/Qmcaj6goBFfqU3vrWsowKTHmWRCTjP7wahsdb1YW6pV5Yb\">\n        (0x1bccd1c56bdc239ee16547d38360d9b7629fa6d0aecdeaa76e0e19c1a0ae9704)\n        </a>\n      </Table.Cell>\n      <Table.Cell><Label color=\"violet\">0.0.2</Label></Table.Cell>\n      <Table.Cell>\n        <a\n          target=\"_blank\"\n          href=\"https://goerli.etherscan.io/address/0x5d8543faa52157de5eaeeb4b209ef09dbd47cad3\">\n        0x5d8543faa52157de5eaeeb4b209ef09dbd47cad3\n        </a>\n      </Table.Cell>\n      <Table.Cell>Mon, 26 Jul 2021</Table.Cell>\n    </Table.Row>\n  );\n}\n\nfunction Agents() {\n  return (\n    <div className=\"Agents__container\">\n      <Header as=\"h2\">\n        Agents for\n        <span className=\"Agents__poolId\">\n          0x9d3d1df113ae5f4ff7fb542439229d50a384f4c2162c4fe4e298beefc872ddf2 (agent-devnet)\n        </span>\n      </Header>\n      <Table striped>\n        <Table.Header>\n          <Table.HeaderCell>AgentId</Table.HeaderCell>\n          <Table.HeaderCell>Version</Table.HeaderCell>\n          <Table.HeaderCell>From</Table.HeaderCell>\n          <Table.HeaderCell>Date</Table.HeaderCell>\n        </Table.Header>\n        <Table.Body>\n          <Agent />\n          <Agent />\n          <Agent />\n          <Agent />\n        </Table.Body>\n      </Table>\n      <Button>Load more</Button>\n    </div>\n  );\n}\n\nexport default Agents;","import React from 'react';\nimport Topbar from './components/Topbar';\nimport PoolSearcher from './components/PoolSearcher';\nimport Agents from './components/Agents';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Topbar />\n      <PoolSearcher />\n      <Agents />\n    </div>\n  );\n}\n\nexport default App;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../app/store';\nimport { fetchCount } from '../api/poolAPI';\n\nexport interface AppState {\n  network: {\n    name: string,\n    contractAddress: string,\n    baseAPI: string,\n    baseExplorerAPI: string,\n  },\n  pool: {\n    id: string,\n    name: string\n  },\n  agents: {\n    id: string,\n    name: string,\n    version: string,\n    fromAddress: string,\n    date: string,\n  }[],\n}\n\nconst initialState: AppState = {\n  network: {\n    name: 'Development',\n    contractAddress: '0x30dB6Af76Ff4A9A30d7f927eFab235a7ea600e22',\n    baseAPI: 'https://goerli.infura.io/v3/PROJECT-ID',\n    baseExplorerAPI: 'https://goerli.etherscan.io',\n  },\n  pool: {\n    id: '0x9d3d1df113ae5f4ff7fb542439229d50a384f4c2162c4fe4e298beefc872ddf2',\n    name: 'agent-devnet'\n  },\n  agents: [\n    {\n      id: '0x1bccd1c56bdc239ee16547d38360d9b7629fa6d0aecdeaa76e0e19c1a0ae9704',\n      name: 'agent1',\n      version: '0.0.2',\n      fromAddress: '0x5d8543faa52157de5eaeeb4b209ef09dbd47cad3',\n      date: 'Mon, 26 Jul 2021',\n    }\n  ]\n};\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {},\n});\n\nexport default appSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport appSlice from '../slices/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appSlice,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}